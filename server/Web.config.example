<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <configSections>
    <section name="autofacConfiguration" type="Autofac.Configuration.SectionHandler, Autofac.Configuration" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>
  <appSettings>
    <!--add key="ApplicationMode" value="Debug" /-->
    <add key="PluginsPath" value="bin" />
    <add key="PluginsPath_Addons" value="plugins" />
    <add key="DependenciesPath" value="bin" />
    <add key="DocumentsPath" value="..\..\Documents" />
    <add key="ServerAssembly" value="cache\GeneratedModel.dll" />
    <!--add key="MaxSearchLimit" value="200" /-->
    <add key="ConnectionString" value="server=localhost;port=5432;database=dsl_command_example;user=dsl_command_example;password=dsl_command_example;encoding=unicode" />
    <add key="DefaultAuthorization" value="Basic cmV2ZW5qOnJldmVuag==" />
    <add key="PdfConverter" value="PdfConverter\PdfConverter.exe" />
    <add key="Revenj.AllowAspects" value="false" />
    <!--add key="Performance.TraceAll" value="true" /-->
    <!--add key="Performance.TimerLimit" value="1" /-->
    <!--add key="Performance.TraceDatabase" value="true" /-->
    <!--add key="Performance.DatabaseLimit" value="1" /-->
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <sessionState mode="Off" />
	<customErrors mode="Off" />
    <httpRuntime relaxedUrlToFileSystemMapping="true" maxRequestLength="32768" />
  </system.web>
  <!--system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="messages"
               type="System.Diagnostics.XmlWriterTraceListener"
               initializeData="logs/messages.svclog" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics-->
  <system.serviceModel>
    <!--diagnostics>
      <messageLogging logEntireMessage="true"
                      logMalformedMessages="false"
                      logMessagesAtServiceLevel="true"
                      logMessagesAtTransportLevel="false"
                      maxMessagesToLog="3000"
                      maxSizeOfMessageToLog="2000"/>
    </diagnostics-->
    <protocolMapping>
      <!--add scheme="http" binding="webHttpBinding" bindingConfiguration="webHttp"/-->
    </protocolMapping>
    <services>
      <!-- SOAP service-->
      <service name="Revenj.Wcf.SoapApplication">
        <endpoint binding="basicHttpBinding"
                  bindingConfiguration="httpBinding"
                  contract="Revenj.Api.ISoapApplication" />
      </service>
      <!-- REST service-->
      <service name="Revenj.Wcf.RestApplication">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Api.IRestApplication" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Api.IRestApplication" />
      </service>
      <!-- REST plugins-->
      <service name="Revenj.Features.RestCache.CachingCrudCommands">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.ICrudCommands" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.ICrudCommands" />
      </service>
      <service name="Revenj.Plugins.Rest.Commands.CrudCommands">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.ICrudCommands" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.ICrudCommands" />
      </service>
      <service name="Revenj.Plugins.Rest.Commands.StandardCommands">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IStandardCommands" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IStandardCommands" />
      </service>
      <service name="Revenj.Features.RestCache.CachingDomainCommands">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IDomainCommands" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IDomainCommands" />
      </service>
      <service name="Revenj.Plugins.Rest.Commands.DomainCommands">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IDomainCommands" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IDomainCommands" />
      </service>
      <service name="Revenj.Plugins.Rest.Commands.ReportingCommands">
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapper"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IReportingCommands" />
        <endpoint binding="customBinding"
                  bindingConfiguration="customMapperSecure"
                  behaviorConfiguration="rawHttp"
                  contract="Revenj.Plugins.Rest.Commands.IReportingCommands" />
      </service>
    </services>
    <bindings>
      <basicHttpBinding>
        <binding name="httpBinding" maxReceivedMessageSize="8388608">
          <readerQuotas maxStringContentLength="8388608" />
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="webHttp" closeTimeout="00:01:00" 
                 transferMode="Streamed" openTimeout="00:10:00"
                 receiveTimeout="00:10:00" sendTimeout="00:10:00"
                 maxBufferPoolSize="8388608" maxReceivedMessageSize="8388608">
          <readerQuotas maxStringContentLength="8388608" maxArrayLength="8388608" />
        </binding>
      </webHttpBinding>
      <wsHttpBinding>
        <binding name="wsBinding" maxReceivedMessageSize="8388608">
          <readerQuotas maxStringContentLength="8388608" />
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
      </wsHttpBinding>
      <customBinding>
        <binding name="customMapper">
          <webMessageEncoding webContentTypeMapperType="Revenj.Wcf.RawFormatMapper, Revenj.Wcf" />
          <httpTransport manualAddressing="true" maxBufferPoolSize="8388608" maxReceivedMessageSize="8388608" maxBufferSize="8388608"/>
        </binding>
        <binding name="customMapperSecure">
          <webMessageEncoding webContentTypeMapperType="Revenj.Wcf.RawFormatMapper, Revenj.Wcf" />
          <httpsTransport manualAddressing="true" maxBufferPoolSize="8388608" maxReceivedMessageSize="8388608" maxBufferSize="8388608"/>
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpsGetEnabled="true" httpGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <!--add policyType="Revenj.Wcf.StandardAuthorizationPolicy, Revenj.Wcf" /-->
            </authorizationPolicies>
          </serviceAuthorization>
          <serviceCredentials>
            <!--userNameAuthentication userNamePasswordValidationMode="Custom"
                                    customUserNamePasswordValidatorType="Revenj.Wcf.StandardLoginValidator, Revenj.Wcf" /-->
            <serviceCertificate findValue="PLEASE ADD SERVER CERTIFICATE"
                                x509FindType="FindBySubjectName"
                                storeLocation="LocalMachine"
                                storeName="My" />
          </serviceCredentials>
          <!--serviceThrottling maxConcurrentCalls="16"/-->
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="rawHttp">
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="false">
      <serviceActivations>
        <!-- SOAP service-->
        <add relativeAddress="SoapApplication.svc"
             service="Revenj.Wcf.SoapApplication, Revenj.Wcf"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/>
        <!-- REST service-->
        <add relativeAddress="RestApplication.svc"
             service="Revenj.Wcf.RestApplication, Revenj.Wcf"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/>
        <!-- REST plugins-->
        <!--add relativeAddress="Crud.svc"
             service="Revenj.Features.RestCache.CachingCrudCommands, Revenj.Features.RestCache"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/-->
        <add relativeAddress="Crud.svc"
             service="Revenj.Plugins.Rest.Commands.CrudCommands, Revenj.Plugins.Rest.Commands"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/>
        <add relativeAddress="Commands.svc"
             service="Revenj.Plugins.Rest.Commands.StandardCommands, Revenj.Plugins.Rest.Commands"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/>
        <!--add relativeAddress="Domain.svc"
             service="Revenj.Features.RestCache.CachingDomainCommands, Revenj.Features.RestCache"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/-->
        <add relativeAddress="Domain.svc"
             service="Revenj.Plugins.Rest.Commands.DomainCommands, Revenj.Plugins.Rest.Commands"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/>
        <add relativeAddress="Reporting.svc"
             service="Revenj.Plugins.Rest.Commands.ReportingCommands, Revenj.Plugins.Rest.Commands"
             factory="Revenj.Wcf.ContainerWcfHost, Revenj.Wcf"/>
      </serviceActivations>
    </serviceHostingEnvironment>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
  <autofacConfiguration>
    <modules>
      <module type="Revenj.Wcf.StandardModule, Revenj.Wcf" />
    </modules>
  </autofacConfiguration>
  <nlog>
    <targets>
      <target name="errorFile" type="File" fileName="${basedir}/logs/error.log" />
      <target name="traceFile" type="File" fileName="${basedir}/logs/trace.log" />
    </targets>
    <rules>
      <logger name="*" minLevel="Error" writeTo="errorFile" />
      <logger name="*" minLevel="Trace" writeTo="traceFile" />
    </rules>
  </nlog>
</configuration>
